{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 1,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter sub1 Marks70\n",
      "Enter sub2 Marks60\n",
      "Enter sub3 Marks54\n",
      "Enter sub4 Marks85\n",
      "Enter sub5 Marks57\n",
      "Grade:  B\n"
     ]
    }
   ],
   "source": [
    "#Pyton Marksheet Program\n",
    "\n",
    "sub1 = int(input(\"Enter sub1 Marks\"))\n",
    "sub2 = int(input(\"Enter sub2 Marks\"))\n",
    "sub3 = int(input(\"Enter sub3 Marks\"))\n",
    "sub4 = int(input(\"Enter sub4 Marks\"))\n",
    "sub5 = int(input(\"Enter sub5 Marks\"))\n",
    "\n",
    "avg = (sub1+sub2+sub3+sub4+sub5)//5\n",
    "\n",
    "if(avg>=80):\n",
    "    print(\"Grade: A\")\n",
    "elif(avg>=80&avg<70):\n",
    "    print(\"Grade:  B\")\n",
    "elif(avg>=70&avg60):\n",
    "    print(\"Grade:  C\")\n",
    "elif(avg>=60&avg50):\n",
    "    print(\"Grade:  D\")\n",
    "else:\n",
    "    print(\"Grade: F\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Enter Number10\n",
      "Number is Even 10\n"
     ]
    }
   ],
   "source": [
    "# Even or Odd Program\n",
    "\n",
    "a = int(input(\"Enter Number\"))\n",
    "\n",
    "if(a%2==0):\n",
    "    print(\"Number is Even\",a)\n",
    "else:\n",
    "    print(\"Number is Odd\",a)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 5,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "4\n"
     ]
    }
   ],
   "source": [
    "# Length of a List\n",
    "\n",
    "list = [\"Noman\",\"Mughal\",255,0.25]\n",
    "print(len(list))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "195\n"
     ]
    }
   ],
   "source": [
    "# sum numeric values in a list\n",
    "\n",
    "list1 = [2,55,15,25,98]\n",
    "print(sum(list1))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 8,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "100\n"
     ]
    }
   ],
   "source": [
    "# Get Largest Number in a List\n",
    "\n",
    "list2  = [99,100,33,55,40]\n",
    "print(max(list2))"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "1\n",
      "1\n",
      "2\n",
      "3\n"
     ]
    }
   ],
   "source": [
    "#Print number from a list which is less than 5\n",
    "\n",
    "b = [1,1,2,3,5,8,13,21,34,55,89]\n",
    "for i in b:\n",
    "    if(i<5):\n",
    "        print(i)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.7.1"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 2
}
